name: "Canary release workflow"

on:
  push:
    branches:
    - "master"
    paths:
    - "charts/deploy-canary/"
  workflow_dispatch:

env:
  ARGOCD_APP_NAME: yolo-deploy-canary

defaults:
  run:
    shell: bash

jobs:
  check-diff-values:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.check.outputs.release }}
    steps:
    - name: checkout repo
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
        fetch-depth: 2
    - name: check canary image
      id: check
      run: |
        IMAGE_CANARY=$(yq .image.canary charts/deploy-canary/values.yaml)
        git checkout HEAD~1
        IMAGE_CANARY_OLD=$(yq .image.canary charts/deploy-canary/values.yaml)
        if [[ "${IMAGE_CANARY}"=="${IMAGE_CANARY_OLD}" ]]; then
          echo "release=false" >> "$GITHUB_OUTPUT"
        else
          echo "release=true" >> "$GITHUB_OUTPUT"
        fi

  sync-argocd-app:
    runs-on: self-hosted
    steps:
    - name: Sync with master
      run: |
        argocd app sync "${{ env.ARGOCD_APP_NAME }}"
    - name: Wait for new release
      run: |
        kubectl wait --for condition=available deployment/yolo-deploy-canary-api-canary
        kubectl wait --for condition=available deployment/yolo-deploy-canary-api-stable

  canary-release:
    runs-on: self-hosted
    outputs:
      status: ${{ steps.canary.outputs.status }}
    needs: [check-diff-values, sync-argocd-app]
    if: ${{needs.check-diff-values.outputs.release}} == 'true'
    steps:
    - name: checkout repo
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}

    - name: Canary release script
      id: canary
      run: |
        bash scripts/canary-release.sh
        CANARY_STATUS=$?
        echo "status=${CANARY_STATUS}" >> "$GITHUB_OUTPUT"

  commit-new-image:
    runs-on: ubuntu-latest
    needs: [canary-release]
    if: ${{needs.canary.outputs.status}} == '0'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
    - name: Commit new image as stable
      run: |
        git config --global user.name ${{ github.repository_owner }}
        git config --global user.email 259449@student.pwr.edu.pl
        NEW_IMAGE=$(yq .image.canary charts/deploy-canary/values.yaml)
        OLD_IMAGE=$(yq .image.stable charts/deploy-canary/values.yaml) 
        sed -i "s|$OLD_IMAGE|$NEW_IMAGE|" charts/deploy-canary/values.yaml
        git add charts/deploy-canary/values.yaml
        git commit -m "Delivery of image $NEW_IMAGE as new stable version"
        git push https://${{ secrets.GITHUB_TOKEN }}@github.com//${{ github.repository }} ${{ github.ref_name}}

  final-sync-delivery:
    runs-on: self-hosted
    needs: [commit-new-image]
    permissions:
      contents: write
    steps:
    - name: Sync with master
      run: |
        argocd app sync "${{ env.ARGOCD_APP_NAME }}"
    - name: Wait for new release
      run: |
        kubectl wait --for condition=available deployment/yolo-deploy-canary-api-canary
        kubectl wait --for condition=available deployment/yolo-deploy-canary-api-stable