name: 'YOLO container image building'

on:
  push:
    branches:
      - master
      - yolo-v*
    paths:
    - 'model/**'
    - '.github/**'
    - 'scripts/**'
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: yolo-model

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: "Cloning repo"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: "Setting variables"
        run: |
          echo "YOLO_FILE=$(jq -r '.YOLO_FILE' version.json)" >> $GITHUB_ENV
          echo "YOLO_VERSION=$(jq -r '.YOLO_VERSION' version.json)" >> $GITHUB_ENV
          echo "CONTAINER_VERSION=$(jq -r '.CONTAINER_VERSION' version.json)" >> $GITHUB_ENV

      - name: "Variables"
        run: |
          echo "YOLO_FILE=${{ env.YOLO_FILE }}"
          echo "YOLO_VERSION=${{ env.YOLO_VERSION }}"
          echo "CONTAINER_VERSION=${{ env.CONTAINER_VERSION }}"

      - name: "Logging into registry"
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build image"
        run: |
          docker build -t "${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.YOLO_VERSION }}-${{ env.CONTAINER_VERSION }}" --build-arg YOLO_FILE=${{ env.YOLO_FILE }} model/
      
      - name: "Push image"
        run: |
          docker push ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.YOLO_VERSION }}-${{ env.CONTAINER_VERSION }}



